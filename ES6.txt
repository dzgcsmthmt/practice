let constant
let 声明的变量仅在块级作用域内有效
let 不存在声明提升
ES6明确规定，如果区块中存在let和const命令，这个区块对这些命令声明的变量，从一开始就形成了封闭作用域。凡是在声明之前就使用这些变量，就会报错。
总之，在代码块内，使用let命令声明变量之前，该变量都是不可用的。这在语法上，称为“暂时性死区”（temporal dead zone，简称TDZ）。
变量x使用let命令声明，所以在声明之前，都属于x的“死区”，只要用到该变量就会报错。因此，typeof运行时就会抛出一个ReferenceError。
let不允许在相同作用域内，重复声明同一个变量。
const声明一个只读的常量。一旦声明，常量的值就不能改变。
const声明的变量不得改变值，这意味着，const一旦声明变量，就必须立即初始化，不能留到以后赋值。
const不改变引用，可以赋值
块级作用域和函数声明
--允许在块级作用域内声明函数。
--函数声明类似于var，即会提升到全局作用域或函数作用域的头部。
--同时，函数声明还会提升到所在的块级作用域的头部。
-----------------------------------------------------------------------------------------------------------------------
